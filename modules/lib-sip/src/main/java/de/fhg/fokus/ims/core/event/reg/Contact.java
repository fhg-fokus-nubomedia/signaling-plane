//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.09.18 at 09:29:28 PM MESZ 
//

package de.fhg.fokus.ims.core.event.reg;

import java.io.IOException;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.kxml2.kdom.Element;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlSerializer;

import de.fhg.fokus.ims.core.utils.xml.XmlConstants;
import de.fhg.fokus.ims.core.utils.xml.XmlSerializable;


/**
 * <p>
 * Java class for anonymous complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base=&quot;{http://www.w3.org/2001/XMLSchema}anyType&quot;&gt;
 *       &lt;sequence&gt;
 *         &lt;element name=&quot;uri&quot; type=&quot;{http://www.w3.org/2001/XMLSchema}anyURI&quot;/&gt;
 *         &lt;element name=&quot;display-name&quot; minOccurs=&quot;0&quot;&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base=&quot;&lt;http://www.w3.org/2001/XMLSchema&gt;string&quot;&gt;
 *                 &lt;attribute ref=&quot;{http://www.w3.org/XML/1998/namespace}lang&quot;/&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name=&quot;unknown-param&quot; maxOccurs=&quot;unbounded&quot; minOccurs=&quot;0&quot;&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base=&quot;&lt;http://www.w3.org/2001/XMLSchema&gt;string&quot;&gt;
 *                 &lt;attribute name=&quot;name&quot; use=&quot;required&quot; type=&quot;{http://www.w3.org/2001/XMLSchema}string&quot; /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;any processContents='lax' namespace='##other' maxOccurs=&quot;unbounded&quot; minOccurs=&quot;0&quot;/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name=&quot;state&quot; use=&quot;required&quot;&gt;
 *         &lt;simpleType&gt;
 *           &lt;restriction base=&quot;{http://www.w3.org/2001/XMLSchema}string&quot;&gt;
 *             &lt;enumeration value=&quot;active&quot;/&gt;
 *             &lt;enumeration value=&quot;terminated&quot;/&gt;
 *           &lt;/restriction&gt;
 *         &lt;/simpleType&gt;
 *       &lt;/attribute&gt;
 *       &lt;attribute name=&quot;event&quot; use=&quot;required&quot;&gt;
 *         &lt;simpleType&gt;
 *           &lt;restriction base=&quot;{http://www.w3.org/2001/XMLSchema}string&quot;&gt;
 *             &lt;enumeration value=&quot;registered&quot;/&gt;
 *             &lt;enumeration value=&quot;created&quot;/&gt;
 *             &lt;enumeration value=&quot;refreshed&quot;/&gt;
 *             &lt;enumeration value=&quot;shortened&quot;/&gt;
 *             &lt;enumeration value=&quot;expired&quot;/&gt;
 *             &lt;enumeration value=&quot;deactivated&quot;/&gt;
 *             &lt;enumeration value=&quot;probation&quot;/&gt;
 *             &lt;enumeration value=&quot;unregistered&quot;/&gt;
 *             &lt;enumeration value=&quot;rejected&quot;/&gt;
 *           &lt;/restriction&gt;
 *         &lt;/simpleType&gt;
 *       &lt;/attribute&gt;
 *       &lt;attribute name=&quot;duration-registered&quot; type=&quot;{http://www.w3.org/2001/XMLSchema}unsignedLong&quot; /&gt;
 *       &lt;attribute name=&quot;expires&quot; type=&quot;{http://www.w3.org/2001/XMLSchema}unsignedLong&quot; /&gt;
 *       &lt;attribute name=&quot;retry-after&quot; type=&quot;{http://www.w3.org/2001/XMLSchema}unsignedLong&quot; /&gt;
 *       &lt;attribute name=&quot;id&quot; use=&quot;required&quot; type=&quot;{http://www.w3.org/2001/XMLSchema}string&quot; /&gt;
 *       &lt;attribute name=&quot;q&quot; type=&quot;{http://www.w3.org/2001/XMLSchema}string&quot; /&gt;
 *       &lt;attribute name=&quot;callid&quot; type=&quot;{http://www.w3.org/2001/XMLSchema}string&quot; /&gt;
 *       &lt;attribute name=&quot;cseq&quot; type=&quot;{http://www.w3.org/2001/XMLSchema}unsignedLong&quot; /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
public class Contact implements XmlSerializable
{
	public static final class State extends de.fhg.fokus.ims.core.utils.Enum
	{
		public static final State ACTIVE = new State("active");
		public static final State TERMINATED = new State("terminated");

		private State(String value)
		{
			super(value);
		}
	}

	public static final class Event extends de.fhg.fokus.ims.core.utils.Enum
	{
		public static final Event REGISTERED = new Event("registered");
		public static final Event CREATED = new Event("created");
		public static final Event REFRESHED = new Event("refreshed");
		public static final Event SHORTENED = new Event("shortened");
		public static final Event EXPIRED = new Event("expired");
		public static final Event DEACTIVATED = new Event("deactivated");
		public static final Event PROHABITION = new Event("probation");
		public static final Event UNREGISTERED = new Event("unregistered");
		public static final Event REJECTED = new Event("rejected");

		private Event(String value)
		{
			super(value);
		}
	}

	protected String uri;
	protected Contact.DisplayName displayName;
	protected List unknownParam;
	protected List any;
	protected State state;
	protected Event event;
	protected Integer durationRegistered;
	protected Integer expires;
	protected Integer retryAfter;
	protected String id;
	protected String q;
	protected String callid;
	protected Integer cseq;

	/**
	 * Gets the value of the uri property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getUri()
	{
		return uri;
	}

	/**
	 * Sets the value of the uri property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setUri(String value)
	{
		this.uri = value;
	}

	/**
	 * Gets the value of the displayName property.
	 * 
	 * @return possible object is {@link Contact.DisplayName }
	 * 
	 */
	public Contact.DisplayName getDisplayName()
	{
		return displayName;
	}

	/**
	 * Sets the value of the displayName property.
	 * 
	 * @param value
	 *            allowed object is {@link Contact.DisplayName }
	 * 
	 */
	public void setDisplayName(Contact.DisplayName value)
	{
		this.displayName = value;
	}

	/**
	 * Gets the value of the unknownParam property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to the returned list will be present
	 * inside the JAXB object. This is why there is not a <CODE>set</CODE> method for the unknownParam property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getUnknownParam().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list {@link Contact.UnknownParam }
	 * 
	 * 
	 */
	public List getUnknownParam()
	{
		if (unknownParam == null)
		{
			unknownParam = new ArrayList();
		}
		return this.unknownParam;
	}

	/**
	 * Gets the value of the any property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to the returned list will be present
	 * inside the JAXB object. This is why there is not a <CODE>set</CODE> method for the any property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getAny().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list {@link Element } {@link Object }
	 * 
	 * 
	 */
	public List getAny()
	{
		if (any == null)
		{
			any = new ArrayList();
		}
		return this.any;
	}

	/**
	 * Gets the value of the state property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public State getState()
	{
		return state;
	}

	/**
	 * Sets the value of the state property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setState(State value)
	{
		this.state = value;
	}

	/**
	 * Gets the value of the event property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public Event getEvent()
	{
		return event;
	}

	/**
	 * Sets the value of the event property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setEvent(Event value)
	{
		this.event = value;
	}

	/**
	 * Gets the value of the durationRegistered property.
	 * 
	 * @return possible object is {@link BigInteger }
	 * 
	 */
	public Integer getDurationRegistered()
	{
		return durationRegistered;
	}

	/**
	 * Sets the value of the durationRegistered property.
	 * 
	 * @param value
	 *            allowed object is {@link BigInteger }
	 * 
	 */
	public void setDurationRegistered(Integer value)
	{
		this.durationRegistered = value;
	}

	/**
	 * Gets the value of the expires property.
	 * 
	 * @return possible object is {@link BigInteger }
	 * 
	 */
	public Integer getExpires()
	{
		return expires;
	}

	/**
	 * Sets the value of the expires property.
	 * 
	 * @param value
	 *            allowed object is {@link BigInteger }
	 * 
	 */
	public void setExpires(Integer value)
	{
		this.expires = value;
	}

	/**
	 * Gets the value of the retryAfter property.
	 * 
	 * @return possible object is {@link BigInteger }
	 * 
	 */
	public Integer getRetryAfter()
	{
		return retryAfter;
	}

	/**
	 * Sets the value of the retryAfter property.
	 * 
	 * @param value
	 *            allowed object is {@link BigInteger }
	 * 
	 */
	public void setRetryAfter(Integer value)
	{
		this.retryAfter = value;
	}

	/**
	 * Gets the value of the id property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getId()
	{
		return id;
	}

	/**
	 * Sets the value of the id property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setId(String value)
	{
		this.id = value;
	}

	/**
	 * Gets the value of the q property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getQ()
	{
		return q;
	}

	/**
	 * Sets the value of the q property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setQ(String value)
	{
		this.q = value;
	}

	/**
	 * Gets the value of the callid property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getCallid()
	{
		return callid;
	}

	/**
	 * Sets the value of the callid property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setCallid(String value)
	{
		this.callid = value;
	}

	/**
	 * Gets the value of the cseq property.
	 * 
	 * @return possible object is {@link BigInteger }
	 * 
	 */
	public Integer getCseq()
	{
		return cseq;
	}

	/**
	 * Sets the value of the cseq property.
	 * 
	 * @param value
	 *            allowed object is {@link BigInteger }
	 * 
	 */
	public void setCseq(Integer value)
	{
		this.cseq = value;
	}

	public void deserialize(XmlPullParser reader) throws XmlPullParserException, IOException
	{
		state = (State) de.fhg.fokus.ims.core.utils.Enum.parse(State.class, reader.getAttributeValue(XmlPullParser.NO_NAMESPACE, "state"));
		event = (Event) de.fhg.fokus.ims.core.utils.Enum.parse(Event.class, reader.getAttributeValue(XmlPullParser.NO_NAMESPACE, "event"));
		
		String temp = reader.getAttributeValue(XmlPullParser.NO_NAMESPACE, "duration-registered");
		if (temp != null)
			durationRegistered = Integer.valueOf(temp);

		temp = reader.getAttributeValue(XmlPullParser.NO_NAMESPACE, "expires");
		if (temp != null)
			expires = Integer.valueOf(temp);

		temp = reader.getAttributeValue(XmlPullParser.NO_NAMESPACE, "retry-after");
		if (temp != null)
			retryAfter = Integer.valueOf(temp);

		id = reader.getAttributeValue(XmlPullParser.NO_NAMESPACE, "id");

		q = reader.getAttributeValue(XmlPullParser.NO_NAMESPACE, "q");
		temp = reader.getAttributeValue(XmlPullParser.NO_NAMESPACE, "cseq");
		if (temp != null)
			cseq = Integer.valueOf(temp);

		callid = reader.getAttributeValue(XmlPullParser.NO_NAMESPACE, "callid");
		
		String startTagName = reader.getName();

		int eventType = reader.nextTag();
		String namespace = reader.getNamespace();
		String name = reader.getName();

		while (!(eventType == XmlPullParser.END_TAG & name.equals(startTagName)))
		{
			if (Reginfo.NAMESPACE.equals(namespace))
			{
				if (name.equals("uri"))
				{
					uri = reader.nextText();
				} else if (name.equals("display-name"))
				{
					displayName = new DisplayName();
					displayName.deserialize(reader);
				}
				else if (name.equals("unknown-param"))
				{
					UnknownParam param = new UnknownParam();
					param.deserialize(reader);
					getUnknownParam().add(param);
				}
			} 
			else
			{
				Element element = new Element();
				element.parse(reader);
				getAny().add(element);
			}
			
			eventType = reader.nextTag();
			namespace = reader.getNamespace();
			name = reader.getName();
		}

	}

	public void serialize(XmlSerializer writer) throws IOException
	{		
		if (state != null)
			writer.attribute(XmlPullParser.NO_NAMESPACE, "state", state.toString());
		
		if (event != null)
			writer.attribute(XmlPullParser.NO_NAMESPACE, "event", event.toString());

		if (durationRegistered != null)
			writer.attribute(XmlPullParser.NO_NAMESPACE, "duration-registered", durationRegistered.toString());
		if (expires != null)
			writer.attribute(XmlPullParser.NO_NAMESPACE, "expires", expires.toString());
		if (retryAfter != null)
			writer.attribute(XmlPullParser.NO_NAMESPACE, "retry-after", retryAfter.toString());

		writer.attribute(XmlPullParser.NO_NAMESPACE, "id", id);

		if (q != null)
			writer.attribute(XmlPullParser.NO_NAMESPACE, "q", q);
		if (cseq != null)
			writer.attribute(XmlPullParser.NO_NAMESPACE, "cseg", cseq.toString());
		if (callid != null)
			writer.attribute(XmlPullParser.NO_NAMESPACE, "callid", callid);		
		
		writer.startTag(Reginfo.NAMESPACE, "uri");
		writer.text(uri);
		writer.endTag(Reginfo.NAMESPACE, "uri");
		if (displayName != null)
		{
			writer.startTag(Reginfo.NAMESPACE, "display-name");
			displayName.serialize(writer);
			writer.endTag(Reginfo.NAMESPACE, "display-name");
		}

		if (unknownParam != null && unknownParam.size() > 0)
		{
			for (Iterator iterator = unknownParam.iterator(); iterator.hasNext();)
			{
				UnknownParam param = (UnknownParam) iterator.next();
				writer.startTag(Reginfo.NAMESPACE, "unknown-param");
				param.serialize(writer);
				writer.endTag(Reginfo.NAMESPACE, "unknown-param");
			}
		}
	}

	/**
	 * <p>
	 * Java class for anonymous complex type.
	 * 
	 * <p>
	 * The following schema fragment specifies the expected content contained within this class.
	 * 
	 * <pre>
	 * &lt;complexType&gt;
	 *   &lt;simpleContent&gt;
	 *     &lt;extension base=&quot;&lt;http://www.w3.org/2001/XMLSchema&gt;string&quot;&gt;
	 *       &lt;attribute ref=&quot;{http://www.w3.org/XML/1998/namespace}lang&quot;/&gt;
	 *     &lt;/extension&gt;
	 *   &lt;/simpleContent&gt;
	 * &lt;/complexType&gt;
	 * </pre>
	 * 
	 * 
	 */
	public static class DisplayName implements XmlSerializable
	{

		private String value;
		private String lang;

		/**
		 * Gets the value of the value property.
		 * 
		 * @return possible object is {@link String }
		 * 
		 */
		public String getValue()
		{
			return value;
		}

		/**
		 * Sets the value of the value property.
		 * 
		 * @param value
		 *            allowed object is {@link String }
		 * 
		 */
		public void setValue(String value)
		{
			this.value = value;
		}

		/**
		 * Gets the value of the lang property.
		 * 
		 * @return possible object is {@link String }
		 * 
		 */
		public String getLang()
		{
			return lang;
		}

		/**
		 * Sets the value of the lang property.
		 * 
		 * @param value
		 *            allowed object is {@link String }
		 * 
		 */
		public void setLang(String value)
		{
			this.lang = value;
		}

		public void deserialize(XmlPullParser reader) throws XmlPullParserException, IOException
		{
			String lang = reader.getAttributeValue(XmlConstants.XML_NAMESPACE, "lang");
			if (lang != null)
				this.lang = lang;
			value = reader.nextText();
		}

		public void serialize(XmlSerializer writer) throws IOException
		{
			if (lang != null)
				writer.attribute(XmlConstants.XML_NAMESPACE, "lang", lang);
			writer.text(value);
		}

	}

	/**
	 * <p>
	 * Java class for anonymous complex type.
	 * 
	 * <p>
	 * The following schema fragment specifies the expected content contained within this class.
	 * 
	 * <pre>
	 * &lt;complexType&gt;
	 *   &lt;simpleContent&gt;
	 *     &lt;extension base=&quot;&lt;http://www.w3.org/2001/XMLSchema&gt;string&quot;&gt;
	 *       &lt;attribute name=&quot;name&quot; use=&quot;required&quot; type=&quot;{http://www.w3.org/2001/XMLSchema}string&quot; /&gt;
	 *     &lt;/extension&gt;
	 *   &lt;/simpleContent&gt;
	 * &lt;/complexType&gt;
	 * </pre>
	 * 
	 * 
	 */
	public static class UnknownParam implements XmlSerializable
	{

		private String value;
		private String name;

		/**
		 * Gets the value of the value property.
		 * 
		 * @return possible object is {@link String }
		 * 
		 */
		public String getValue()
		{
			return value;
		}

		/**
		 * Sets the value of the value property.
		 * 
		 * @param value
		 *            allowed object is {@link String }
		 * 
		 */
		public void setValue(String value)
		{
			this.value = value;
		}

		/**
		 * Gets the value of the name property.
		 * 
		 * @return possible object is {@link String }
		 * 
		 */
		public String getName()
		{
			return name;
		}

		/**
		 * Sets the value of the name property.
		 * 
		 * @param value
		 *            allowed object is {@link String }
		 * 
		 */
		public void setName(String value)
		{
			this.name = value;
		}

		public void deserialize(XmlPullParser reader) throws XmlPullParserException, IOException
		{
			name = reader.getAttributeValue(XmlPullParser.NO_NAMESPACE, "name");
			value = reader.nextText();
		}

		public void serialize(XmlSerializer writer) throws IOException
		{
			writer.attribute(XmlPullParser.NO_NAMESPACE, "name", name);
			writer.text(value);
		}
	}
}
